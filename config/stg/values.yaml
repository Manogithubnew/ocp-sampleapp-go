abTestingEnable: true 

app:
  variants:
    - name: stable
      version: stable
    - name: canary
      version: canary
      
replicaCount: 1

namesapce: < name>

name: < name>

image:
  repository: < complete path>
  tag: 1.0.0
  pullPolicy: Always

podDisruptionBudget:
  enabled: true
  minAvailable: 1%   # or use maxUnavailable
  # maxUnavailable: 1

env:
  - name: APP_ENV
    value: "stable"
  - name: LOG_LEVEL
    value: "error"
  - name: API_URL
    value: "https://api.example.com"

envFrom:
  configMap:
    enabled: false
  secret:
     enabled: false
     name: <name>

livenessProbe:
  enabled: false
  httpGet:
    path: /app/healthcheck
    port: 8080
  initialDelaySeconds: 10
  periodSeconds: 15
  timeoutSeconds: 5
  failureThreshold: 3
  successThreshold: 1

readinessProbe:
  enabled: false
  httpGet:
    path: /health
    port: 8080
  initialDelaySeconds: 5
  periodSeconds: 10
  timeoutSeconds: 3
  failureThreshold: 3
  successThreshold: 1

startupProbe:
  enabled: false
  httpGet:
    path: /healthz
    port: 8080
  initialDelaySeconds: 10
  periodSeconds: 5
  timeoutSeconds: 2
  failureThreshold: 30

volumes:
  enabled: true
  configMap:
    enabled: false
  secretVolume:
    enabled: false
  ephemeralVolume:
    enabled: false
  nfs:
    enabled: false
    configs:
    - name: nfs-volume
    mountPath: /var/nfs
    server: < IP>
    path: < path>

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 250m
    memory: 256Mi

service:
  enabled: true

services:
  - port: 8080
    targetPort: 8080
    name: < name>
    port_name: <name>

cronjob:
  enabled: false

hpa:
  enabled: false
  max: 1
  cpu: 80
  memory: 80

vpa:
  enabled: false
  replicaCount: 1
  updateMode: Off
  containerNmae: '*'

venafi:
  enabled: false
  issuerName: venafi-issuer
  issuerKind: ClusterIssuer  # or Issuer
  zone: "DevOps\\TLS"
  tpp:
    url: "https://tpp.example.com"
    credentialsRef: venafi-tpp-secret
    trustBundle: ""
  commonName: my-app.example.com
  dnsNames:
    - my-app.example.com
    - my-app
  appId: <ID>

revisionHistoryLimit: 2

antiAffinity: soft

dnsConfig:
  enabled: false

serviceAccount:
  enabled: false

imagePullSecret:
  enabled: false

statefulset:
  enabled: false

multipleRoutes: true

istio:
  enabled: true
  route:
    enabled: true
  routes:
  - name: < name>
    namespace: istio-system
    hots: < host fqdn>
    targetPort: https
    tls:
      termination: passthrough
      insecurePolicy: Redirect  
    wildcard:
       policy: None
  gateway:
    enabled: true
    name: < name>
    selector: ingressgateway
    unsecure_port: 80
    hosts:
    - < host>
    tls:
      enabled: true
      secure_port: 443
      mode: SIMPLE
      credentialName: < name>

istio:
virtualservice:
  enabled: true
  name: < name>
  rules:
    - match:
        - uri:
            prefix: /api
      route:
        - destination:
            host: < host>
            subset: stable
            port: 
             number: 8080
          weight: 80
       - destination:
            host: < host>
            subset: canary
            port: 
             number: 8080
          weight: 20

destinationrule:
  enabled: true
  name: <name>
  host: < host name>
  subsets:
    - name: stable
      labels:
        version: stable
    - name: canary
      labels:
        version: canary

authorizationpolicy:
  enabled: false

proxyResource:
  cpuRequest: 1m
  cpuLimit: 100m
  memRequest: 32Mi
  memLimit: 256Mi

eenvoyFilter:
  enabled: true
  name: <name>
  namespace:
  priority: 0
  port: 443
  pathContext: GETWAY
  workloadSelector:
    labels:
      istio: ingressgateway
    regionMappings:
      mumbai:
        cidr: "^10%.100%.38%."
      delhi:
        cidr: "^10%.100%.38%."
    fallback: mumbai
    
      









